{"ast":null,"code":"import { ADD_TO_CART, SET_CART_COUNT, INCREMENT, DICREMENT, REMOVE_FROM_CART } from \"./actions\";\nimport produce from 'immer';\nconst initialState = {\n  cart: JSON.parse(localStorage.getItem(\"cart\")) || [],\n  cartCount: JSON.parse(localStorage.getItem(\"cartCount\")) || 0\n};\n\nconst cartReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_TO_CART:\n      {\n        return produce(state, draftState => {\n          const index = draftState.cart.findIndex(el => el.article === action.payload.article);\n          const currentCard = { ...action.payload\n          };\n\n          if (index === -1) {\n            currentCard.count = 1;\n            draftState.cart.push(currentCard);\n          } else {\n            draftState.cart[index].count += 1;\n          }\n\n          localStorage.setItem(\"cart\", JSON.stringify(draftState.cart));\n        });\n      }\n\n    case SET_CART_COUNT:\n      {\n        return produce(state, draftState => {\n          const newCartCount = draftState.cart.reduce((sum, current) => sum + current.count, 0);\n          draftState.cartCount = newCartCount;\n          localStorage.setItem(\"cartCount\", JSON.stringify(newCartCount));\n        });\n      }\n\n    case INCREMENT:\n      {\n        return produce(state, draftState => {\n          const idx = draftState.cart.findIndex(el => el.article === action.payload);\n          draftState.cart[idx].count += 1;\n          draftState.cartCount = draftState.cart.reduce((sum, current) => sum + current.count, 0);\n          localStorage.setItem(\"cart\", JSON.stringify(draftState.cart));\n          localStorage.setItem(\"cartCount\", JSON.stringify(draftState.cartCount));\n        });\n      }\n\n    case DICREMENT:\n      {\n        return produce(state, draftState => {\n          const idx = draftState.cart.findIndex(el => el.article === action.payload);\n\n          if (draftState.cart[idx].count > 1) {\n            draftState.cart[idx].count -= 1;\n            draftState.cartCount = draftState.cart.reduce((sum, current) => sum + current.count, 0);\n            localStorage.setItem(\"cart\", JSON.stringify(draftState.cart));\n            localStorage.setItem(\"cartCount\", JSON.stringify(draftState.cartCount));\n          }\n        });\n      }\n\n    case REMOVE_FROM_CART:\n      {\n        return produce(state, draftState => {\n          const idx = draftState.cart.findIndex(el => el.article === action.payload);\n          draftState.cart.splice(idx, 1);\n          draftState.cartCount = draftState.cart.reduce((sum, current) => sum + current.count, 0);\n          localStorage.setItem(\"cart\", JSON.stringify(draftState.cart));\n          localStorage.setItem(\"cartCount\", JSON.stringify(draftState.cartCount));\n        });\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"names":["ADD_TO_CART","SET_CART_COUNT","INCREMENT","DICREMENT","REMOVE_FROM_CART","produce","initialState","cart","JSON","parse","localStorage","getItem","cartCount","cartReducer","state","action","type","draftState","index","findIndex","el","article","payload","currentCard","count","push","setItem","stringify","newCartCount","reduce","sum","current","idx","splice"],"sources":["/Users/romarumarchyk/Desktop/MyGitLabHW/react-redux/src/store/cart/cartReducer.js"],"sourcesContent":["import { ADD_TO_CART, SET_CART_COUNT, INCREMENT, DICREMENT, REMOVE_FROM_CART } from \"./actions\";\n\nimport produce from 'immer';\n\n\nconst initialState = {\n    cart: JSON.parse(localStorage.getItem(\"cart\")) || [],\n    cartCount: JSON.parse(localStorage.getItem(\"cartCount\")) || 0,\n}\n\nconst cartReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n\n        case ADD_TO_CART: {\n            return produce(state, draftState => {\n\n                const index = draftState.cart.findIndex(el => el.article === action.payload.article)\n                const currentCard = { ...action.payload }\n\n                if (index === -1) {\n\n                    currentCard.count = 1\n                    draftState.cart.push(currentCard);\n\n                } else {\n\n                    draftState.cart[index].count += 1;\n                }\n\n                localStorage.setItem(\"cart\", JSON.stringify(draftState.cart));\n\n            });\n        }\n\n        case SET_CART_COUNT: {\n            return produce(state, draftState => {\n\n                const newCartCount = draftState.cart.reduce((sum, current) => sum + current.count, 0);\n\n                draftState.cartCount = newCartCount;\n\n                localStorage.setItem(\"cartCount\", JSON.stringify(newCartCount));\n\n            })\n\n        }\n\n        case INCREMENT: {\n            return produce(state, draftState => {\n                const idx = draftState.cart.findIndex(el => el.article === action.payload)\n\n                draftState.cart[idx].count += 1\n\n\n                draftState.cartCount = draftState.cart.reduce((sum, current) => sum + current.count, 0);\n                localStorage.setItem(\"cart\", JSON.stringify(draftState.cart));\n                localStorage.setItem(\"cartCount\", JSON.stringify(draftState.cartCount));\n\n            })\n\n        }\n\n        case DICREMENT: {\n            return produce(state, draftState => {\n\n                const idx = draftState.cart.findIndex(el => el.article === action.payload)\n                if (draftState.cart[idx].count > 1) {\n\n                    draftState.cart[idx].count -= 1\n                    draftState.cartCount = draftState.cart.reduce((sum, current) => sum + current.count, 0);\n                    localStorage.setItem(\"cart\", JSON.stringify(draftState.cart));\n                    localStorage.setItem(\"cartCount\", JSON.stringify(draftState.cartCount));\n                }\n\n            })\n        }\n\n        case REMOVE_FROM_CART: {\n            return produce(state, draftState => {\n\n                const idx = draftState.cart.findIndex(el => el.article === action.payload)\n\n                draftState.cart.splice(idx, 1)\n\n                draftState.cartCount = draftState.cart.reduce((sum, current) => sum + current.count, 0);\n                localStorage.setItem(\"cart\", JSON.stringify(draftState.cart));\n                localStorage.setItem(\"cartCount\", JSON.stringify(draftState.cartCount));\n\n            })\n        }\n\n        default: {\n            return state\n        }\n    }\n}\n\nexport default cartReducer"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,cAAtB,EAAsCC,SAAtC,EAAiDC,SAAjD,EAA4DC,gBAA5D,QAAoF,WAApF;AAEA,OAAOC,OAAP,MAAoB,OAApB;AAGA,MAAMC,YAAY,GAAG;EACjBC,IAAI,EAAEC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,KAA4C,EADjC;EAEjBC,SAAS,EAAEJ,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,KAAiD;AAF3C,CAArB;;AAKA,MAAME,WAAW,GAAG,YAAkC;EAAA,IAAjCC,KAAiC,uEAAzBR,YAAyB;EAAA,IAAXS,MAAW;;EAElD,QAAQA,MAAM,CAACC,IAAf;IAEI,KAAKhB,WAAL;MAAkB;QACd,OAAOK,OAAO,CAACS,KAAD,EAAQG,UAAU,IAAI;UAEhC,MAAMC,KAAK,GAAGD,UAAU,CAACV,IAAX,CAAgBY,SAAhB,CAA0BC,EAAE,IAAIA,EAAE,CAACC,OAAH,KAAeN,MAAM,CAACO,OAAP,CAAeD,OAA9D,CAAd;UACA,MAAME,WAAW,GAAG,EAAE,GAAGR,MAAM,CAACO;UAAZ,CAApB;;UAEA,IAAIJ,KAAK,KAAK,CAAC,CAAf,EAAkB;YAEdK,WAAW,CAACC,KAAZ,GAAoB,CAApB;YACAP,UAAU,CAACV,IAAX,CAAgBkB,IAAhB,CAAqBF,WAArB;UAEH,CALD,MAKO;YAEHN,UAAU,CAACV,IAAX,CAAgBW,KAAhB,EAAuBM,KAAvB,IAAgC,CAAhC;UACH;;UAEDd,YAAY,CAACgB,OAAb,CAAqB,MAArB,EAA6BlB,IAAI,CAACmB,SAAL,CAAeV,UAAU,CAACV,IAA1B,CAA7B;QAEH,CAjBa,CAAd;MAkBH;;IAED,KAAKN,cAAL;MAAqB;QACjB,OAAOI,OAAO,CAACS,KAAD,EAAQG,UAAU,IAAI;UAEhC,MAAMW,YAAY,GAAGX,UAAU,CAACV,IAAX,CAAgBsB,MAAhB,CAAuB,CAACC,GAAD,EAAMC,OAAN,KAAkBD,GAAG,GAAGC,OAAO,CAACP,KAAvD,EAA8D,CAA9D,CAArB;UAEAP,UAAU,CAACL,SAAX,GAAuBgB,YAAvB;UAEAlB,YAAY,CAACgB,OAAb,CAAqB,WAArB,EAAkClB,IAAI,CAACmB,SAAL,CAAeC,YAAf,CAAlC;QAEH,CARa,CAAd;MAUH;;IAED,KAAK1B,SAAL;MAAgB;QACZ,OAAOG,OAAO,CAACS,KAAD,EAAQG,UAAU,IAAI;UAChC,MAAMe,GAAG,GAAGf,UAAU,CAACV,IAAX,CAAgBY,SAAhB,CAA0BC,EAAE,IAAIA,EAAE,CAACC,OAAH,KAAeN,MAAM,CAACO,OAAtD,CAAZ;UAEAL,UAAU,CAACV,IAAX,CAAgByB,GAAhB,EAAqBR,KAArB,IAA8B,CAA9B;UAGAP,UAAU,CAACL,SAAX,GAAuBK,UAAU,CAACV,IAAX,CAAgBsB,MAAhB,CAAuB,CAACC,GAAD,EAAMC,OAAN,KAAkBD,GAAG,GAAGC,OAAO,CAACP,KAAvD,EAA8D,CAA9D,CAAvB;UACAd,YAAY,CAACgB,OAAb,CAAqB,MAArB,EAA6BlB,IAAI,CAACmB,SAAL,CAAeV,UAAU,CAACV,IAA1B,CAA7B;UACAG,YAAY,CAACgB,OAAb,CAAqB,WAArB,EAAkClB,IAAI,CAACmB,SAAL,CAAeV,UAAU,CAACL,SAA1B,CAAlC;QAEH,CAVa,CAAd;MAYH;;IAED,KAAKT,SAAL;MAAgB;QACZ,OAAOE,OAAO,CAACS,KAAD,EAAQG,UAAU,IAAI;UAEhC,MAAMe,GAAG,GAAGf,UAAU,CAACV,IAAX,CAAgBY,SAAhB,CAA0BC,EAAE,IAAIA,EAAE,CAACC,OAAH,KAAeN,MAAM,CAACO,OAAtD,CAAZ;;UACA,IAAIL,UAAU,CAACV,IAAX,CAAgByB,GAAhB,EAAqBR,KAArB,GAA6B,CAAjC,EAAoC;YAEhCP,UAAU,CAACV,IAAX,CAAgByB,GAAhB,EAAqBR,KAArB,IAA8B,CAA9B;YACAP,UAAU,CAACL,SAAX,GAAuBK,UAAU,CAACV,IAAX,CAAgBsB,MAAhB,CAAuB,CAACC,GAAD,EAAMC,OAAN,KAAkBD,GAAG,GAAGC,OAAO,CAACP,KAAvD,EAA8D,CAA9D,CAAvB;YACAd,YAAY,CAACgB,OAAb,CAAqB,MAArB,EAA6BlB,IAAI,CAACmB,SAAL,CAAeV,UAAU,CAACV,IAA1B,CAA7B;YACAG,YAAY,CAACgB,OAAb,CAAqB,WAArB,EAAkClB,IAAI,CAACmB,SAAL,CAAeV,UAAU,CAACL,SAA1B,CAAlC;UACH;QAEJ,CAXa,CAAd;MAYH;;IAED,KAAKR,gBAAL;MAAuB;QACnB,OAAOC,OAAO,CAACS,KAAD,EAAQG,UAAU,IAAI;UAEhC,MAAMe,GAAG,GAAGf,UAAU,CAACV,IAAX,CAAgBY,SAAhB,CAA0BC,EAAE,IAAIA,EAAE,CAACC,OAAH,KAAeN,MAAM,CAACO,OAAtD,CAAZ;UAEAL,UAAU,CAACV,IAAX,CAAgB0B,MAAhB,CAAuBD,GAAvB,EAA4B,CAA5B;UAEAf,UAAU,CAACL,SAAX,GAAuBK,UAAU,CAACV,IAAX,CAAgBsB,MAAhB,CAAuB,CAACC,GAAD,EAAMC,OAAN,KAAkBD,GAAG,GAAGC,OAAO,CAACP,KAAvD,EAA8D,CAA9D,CAAvB;UACAd,YAAY,CAACgB,OAAb,CAAqB,MAArB,EAA6BlB,IAAI,CAACmB,SAAL,CAAeV,UAAU,CAACV,IAA1B,CAA7B;UACAG,YAAY,CAACgB,OAAb,CAAqB,WAArB,EAAkClB,IAAI,CAACmB,SAAL,CAAeV,UAAU,CAACL,SAA1B,CAAlC;QAEH,CAVa,CAAd;MAWH;;IAED;MAAS;QACL,OAAOE,KAAP;MACH;EAlFL;AAoFH,CAtFD;;AAwFA,eAAeD,WAAf"},"metadata":{},"sourceType":"module"}