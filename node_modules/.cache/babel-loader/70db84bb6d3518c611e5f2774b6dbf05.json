{"ast":null,"code":"import { ADD_TO_DO, GET_TO_DO, SET_IS_LOADING_TO_DO, SET_IS_ADD_TO_DO_FETCHING } from \"./actions\";\nimport produce from 'immer';\nconst initialState = {\n  data: []\n};\n\nconst dataReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_DATA:\n      {\n        return produce(state, draftState => {\n          draftState.data = action.payload;\n        }); // return { ...state, data: action.payload }\n      }\n    // case ADD_TO_DO: {\n    //     console.log(action.payload)\n    //     return produce(state, draftState => {\n    //         draftState.data.unshift(action.payload);\n    //     });\n    //     // return {...state, data: [action.payload, ...state.data ] }\n    // }\n    // case SET_IS_LOADING_TO_DO: {\n    //     return produce(state, draftState => {\n    //         draftState.isLoading = action.payload;\n    //     });\n    //     // return {...state, isLoading: action.payload, }\n    // }\n    // case SET_IS_ADD_TO_DO_FETCHING: {\n    //     return produce(state, draftState => {\n    //         draftState.isAddToDoFetching = action.payload;\n    //     });\n    //     // return {...state, isAddToDoFetching: action.payload}\n    // }\n\n    default:\n      {\n        return state;\n      }\n  }\n}; // const toDoListReducer = (state = initialState, action) => {\n//     switch(action.type) {\n//         case GET_TO_DO: {\n//             return produce(state, draftState => {\n//                 draftState.data = action.payload;\n//             });\n//             // return { ...state, data: action.payload }\n//         }\n//         case ADD_TO_DO: {\n//             console.log(action.payload)\n//             return produce(state, draftState => {\n//                 draftState.data.unshift(action.payload);\n//             });\n//             // return {...state, data: [action.payload, ...state.data ] }\n//         }\n//         case SET_IS_LOADING_TO_DO: {\n//             return produce(state, draftState => {\n//                 draftState.isLoading = action.payload;\n//             });\n//             // return {...state, isLoading: action.payload, }\n//         }\n//         case SET_IS_ADD_TO_DO_FETCHING: {\n//             return produce(state, draftState => {\n//                 draftState.isAddToDoFetching = action.payload;\n//             });\n//             // return {...state, isAddToDoFetching: action.payload}\n//         }\n//         default: {\n//             return state\n//         }\n//     }\n// }\n\n\nexport default dataReducer;","map":{"version":3,"names":["ADD_TO_DO","GET_TO_DO","SET_IS_LOADING_TO_DO","SET_IS_ADD_TO_DO_FETCHING","produce","initialState","data","dataReducer","state","action","type","GET_DATA","draftState","payload"],"sources":["/Users/romarumarchyk/Desktop/MyGitLabHW/react-funk/src/store/data/todoListReducer.js"],"sourcesContent":["import { ADD_TO_DO, GET_TO_DO, SET_IS_LOADING_TO_DO, SET_IS_ADD_TO_DO_FETCHING } from \"./actions\";\nimport produce from 'immer';\n\nconst initialState = {\n    data: [],\n}\n\nconst dataReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case GET_DATA: {\n            return produce(state, draftState => {\n                draftState.data = action.payload;\n            });\n            // return { ...state, data: action.payload }\n        }\n        // case ADD_TO_DO: {\n        //     console.log(action.payload)\n        //     return produce(state, draftState => {\n        //         draftState.data.unshift(action.payload);\n        //     });\n        //     // return {...state, data: [action.payload, ...state.data ] }\n        // }\n        // case SET_IS_LOADING_TO_DO: {\n        //     return produce(state, draftState => {\n        //         draftState.isLoading = action.payload;\n        //     });\n        //     // return {...state, isLoading: action.payload, }\n        // }\n\n        // case SET_IS_ADD_TO_DO_FETCHING: {\n        //     return produce(state, draftState => {\n        //         draftState.isAddToDoFetching = action.payload;\n        //     });\n        //     // return {...state, isAddToDoFetching: action.payload}\n        // }\n        default: {\n            return state\n        }\n    }\n}\n\n\n\n// const toDoListReducer = (state = initialState, action) => {\n//     switch(action.type) {\n//         case GET_TO_DO: {\n//             return produce(state, draftState => {\n//                 draftState.data = action.payload;\n//             });\n//             // return { ...state, data: action.payload }\n//         }\n//         case ADD_TO_DO: {\n//             console.log(action.payload)\n//             return produce(state, draftState => {\n//                 draftState.data.unshift(action.payload);\n//             });\n//             // return {...state, data: [action.payload, ...state.data ] }\n//         }\n//         case SET_IS_LOADING_TO_DO: {\n//             return produce(state, draftState => {\n//                 draftState.isLoading = action.payload;\n//             });\n//             // return {...state, isLoading: action.payload, }\n//         }\n\n//         case SET_IS_ADD_TO_DO_FETCHING: {\n//             return produce(state, draftState => {\n//                 draftState.isAddToDoFetching = action.payload;\n//             });\n//             // return {...state, isAddToDoFetching: action.payload}\n//         }\n//         default: {\n//             return state\n//         }\n//     }\n// }\n\nexport default dataReducer"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,SAApB,EAA+BC,oBAA/B,EAAqDC,yBAArD,QAAsF,WAAtF;AACA,OAAOC,OAAP,MAAoB,OAApB;AAEA,MAAMC,YAAY,GAAG;EACjBC,IAAI,EAAE;AADW,CAArB;;AAIA,MAAMC,WAAW,GAAG,YAAkC;EAAA,IAAjCC,KAAiC,uEAAzBH,YAAyB;EAAA,IAAXI,MAAW;;EAClD,QAAQA,MAAM,CAACC,IAAf;IACI,KAAKC,QAAL;MAAe;QACX,OAAOP,OAAO,CAACI,KAAD,EAAQI,UAAU,IAAI;UAChCA,UAAU,CAACN,IAAX,GAAkBG,MAAM,CAACI,OAAzB;QACH,CAFa,CAAd,CADW,CAIX;MACH;IACD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;;IACA;MAAS;QACL,OAAOL,KAAP;MACH;EA7BL;AA+BH,CAhCD,C,CAoCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeD,WAAf"},"metadata":{},"sourceType":"module"}