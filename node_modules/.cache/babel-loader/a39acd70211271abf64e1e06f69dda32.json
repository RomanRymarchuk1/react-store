{"ast":null,"code":"import { GET_DATA } from \"./actions\";\nimport produce from 'immer';\nconst initialState = {\n  data: []\n};\n\nconst dataReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_DATA:\n      {\n        return produce(state, draftState => {\n          draftState.data = action.payload;\n        }); // return { ...state, data: action.payload }\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n};\n\nexport default dataReducer;","map":{"version":3,"names":["GET_DATA","produce","initialState","data","dataReducer","state","action","type","draftState","payload"],"sources":["/Users/romarumarchyk/Desktop/MyGitLabHW/react-redux/src/store/data/dataReducer.js"],"sourcesContent":["import { GET_DATA } from \"./actions\";\nimport produce from 'immer';\n\nconst initialState = {\n    data: [],\n}\n\nconst dataReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case GET_DATA: {\n            return produce(state, draftState => {\n                draftState.data = action.payload;\n            });\n            // return { ...state, data: action.payload }\n        }\n        default: {\n            return state\n        }\n    }\n}\n\nexport default dataReducer"],"mappings":"AAAA,SAASA,QAAT,QAAyB,WAAzB;AACA,OAAOC,OAAP,MAAoB,OAApB;AAEA,MAAMC,YAAY,GAAG;EACjBC,IAAI,EAAE;AADW,CAArB;;AAIA,MAAMC,WAAW,GAAG,YAAkC;EAAA,IAAjCC,KAAiC,uEAAzBH,YAAyB;EAAA,IAAXI,MAAW;;EAClD,QAAQA,MAAM,CAACC,IAAf;IACI,KAAKP,QAAL;MAAe;QACX,OAAOC,OAAO,CAACI,KAAD,EAAQG,UAAU,IAAI;UAChCA,UAAU,CAACL,IAAX,GAAkBG,MAAM,CAACG,OAAzB;QACH,CAFa,CAAd,CADW,CAIX;MACH;;IACD;MAAS;QACL,OAAOJ,KAAP;MACH;EATL;AAWH,CAZD;;AAcA,eAAeD,WAAf"},"metadata":{},"sourceType":"module"}