{"ast":null,"code":"import { ADD_TO_CART } from \"./actions\";\nimport produce from 'immer';\nconst initialState = {\n  cart: JSON.parse(localStorage.getItem(\"cart\")) || [],\n  cartCount: JSON.parse(localStorage.getItem(\"cartCount\")) || 0\n};\n\nconst dataReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_TO_CART:\n      {\n        return produce(state, draftState => {\n          draftState.cart.push(action.payload);\n          localStorage.setItem(\"cart\", JSON.stringify(draftState.cart));\n        }); // return { ...state, data: action.payload }\n      }\n\n    case INCREMENT_CART_ITEM:\n      {\n        return produce(state, draftState => {\n          draftState.cart[action.payload].count += 1;\n          localStorage.setItem(\"cart\", JSON.stringify(draftState.cart));\n        });\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n};\n\nexport default dataReducer;","map":{"version":3,"names":["ADD_TO_CART","produce","initialState","cart","JSON","parse","localStorage","getItem","cartCount","dataReducer","state","action","type","draftState","push","payload","setItem","stringify","INCREMENT_CART_ITEM","count"],"sources":["/Users/romarumarchyk/Desktop/MyGitLabHW/react-funk/src/store/cart/cartReducer.js"],"sourcesContent":["import { ADD_TO_CART } from \"./actions\";\nimport produce from 'immer';\n\nconst initialState = {\n    cart: JSON.parse(localStorage.getItem(\"cart\")) || [],\n    cartCount: JSON.parse(localStorage.getItem(\"cartCount\")) || 0,\n}\n\nconst dataReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_TO_CART: {\n            return produce(state, draftState => {\n                draftState.cart.push(action.payload);\n                localStorage.setItem(\"cart\", JSON.stringify(draftState.cart));\n            });\n            // return { ...state, data: action.payload }\n        }\n        case INCREMENT_CART_ITEM: {\n            return produce(state, draftState => {\n                draftState.cart[action.payload].count += 1;\n                localStorage.setItem(\"cart\", JSON.stringify(draftState.cart));\n            });\n        }\n        default: {\n            return state\n        }\n    }\n}\n\nexport default dataReducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,WAA5B;AACA,OAAOC,OAAP,MAAoB,OAApB;AAEA,MAAMC,YAAY,GAAG;EACjBC,IAAI,EAAEC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,KAA4C,EADjC;EAEjBC,SAAS,EAAEJ,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,KAAiD;AAF3C,CAArB;;AAKA,MAAME,WAAW,GAAG,YAAkC;EAAA,IAAjCC,KAAiC,uEAAzBR,YAAyB;EAAA,IAAXS,MAAW;;EAClD,QAAQA,MAAM,CAACC,IAAf;IACI,KAAKZ,WAAL;MAAkB;QACd,OAAOC,OAAO,CAACS,KAAD,EAAQG,UAAU,IAAI;UAChCA,UAAU,CAACV,IAAX,CAAgBW,IAAhB,CAAqBH,MAAM,CAACI,OAA5B;UACAT,YAAY,CAACU,OAAb,CAAqB,MAArB,EAA6BZ,IAAI,CAACa,SAAL,CAAeJ,UAAU,CAACV,IAA1B,CAA7B;QACH,CAHa,CAAd,CADc,CAKd;MACH;;IACD,KAAKe,mBAAL;MAA0B;QACtB,OAAOjB,OAAO,CAACS,KAAD,EAAQG,UAAU,IAAI;UAChCA,UAAU,CAACV,IAAX,CAAgBQ,MAAM,CAACI,OAAvB,EAAgCI,KAAhC,IAAyC,CAAzC;UACAb,YAAY,CAACU,OAAb,CAAqB,MAArB,EAA6BZ,IAAI,CAACa,SAAL,CAAeJ,UAAU,CAACV,IAA1B,CAA7B;QACH,CAHa,CAAd;MAIH;;IACD;MAAS;QACL,OAAOO,KAAP;MACH;EAhBL;AAkBH,CAnBD;;AAqBA,eAAeD,WAAf"},"metadata":{},"sourceType":"module"}