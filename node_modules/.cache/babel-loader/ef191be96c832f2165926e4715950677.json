{"ast":null,"code":"var _jsxFileName = \"/Users/romarumarchyk/Desktop/MyGitLabHW/react-redux/src/components/CustomInput/CustomInput.js\",\n    _s = $RefreshSig$();\n\nimport React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport { useField } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CustomInput = props => {\n  _s();\n\n  const [field, meta] = useField(props);\n  const {\n    type,\n    placeholder,\n    lable\n  } = props;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [lable, /*#__PURE__*/_jsxDEV(\"input\", {\n        type: type,\n        placeholder: placeholder,\n        ...field\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), !!meta.error && meta.touched && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"error\",\n      children: meta.error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 46\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CustomInput, \"ImX69+3rRx1BE5Ru6eNKPZVOEn4=\", false, function () {\n  return [useField];\n});\n\n_c = CustomInput;\nCustomInput.propTypes = {\n  lable: PropTypes.string.isRequired,\n  type: PropTypes.string,\n  placeholder: PropTypes.string\n};\nCustomInput.defaultProps = {\n  type: 'text',\n  placeholder: ''\n};\nexport default CustomInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomInput\");","map":{"version":3,"names":["React","memo","PropTypes","useField","CustomInput","props","field","meta","type","placeholder","lable","error","touched","propTypes","string","isRequired","defaultProps"],"sources":["/Users/romarumarchyk/Desktop/MyGitLabHW/react-redux/src/components/CustomInput/CustomInput.js"],"sourcesContent":["import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport { useField } from 'formik';\n\nconst CustomInput = (props) => {\n\n    const [field, meta] = useField(props);\n    const { type, placeholder, lable } = props;\n    return (\n        <>\n\n            <label>\n                {lable}\n                <input\n                    type={type}\n                    placeholder={placeholder}\n                    {...field}\n                />\n            </label>\n            {!!meta.error && meta.touched && <span className=\"error\">{meta.error}</span>}\n        </>\n    )\n\n}\n\nCustomInput.propTypes = {\n    lable: PropTypes.string.isRequired,\n    type: PropTypes.string,\n    placeholder: PropTypes.string,\n};\nCustomInput.defaultProps = {\n    type: 'text',\n    placeholder: '',\n};\n\nexport default CustomInput;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,QAA4B,OAA5B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,QAAyB,QAAzB;;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;EAAA;;EAE3B,MAAM,CAACC,KAAD,EAAQC,IAAR,IAAgBJ,QAAQ,CAACE,KAAD,CAA9B;EACA,MAAM;IAAEG,IAAF;IAAQC,WAAR;IAAqBC;EAArB,IAA+BL,KAArC;EACA,oBACI;IAAA,wBAEI;MAAA,WACKK,KADL,eAEI;QACI,IAAI,EAAEF,IADV;QAEI,WAAW,EAAEC,WAFjB;QAAA,GAGQH;MAHR;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ,EAUK,CAAC,CAACC,IAAI,CAACI,KAAP,IAAgBJ,IAAI,CAACK,OAArB,iBAAgC;MAAM,SAAS,EAAC,OAAhB;MAAA,UAAyBL,IAAI,CAACI;IAA9B;MAAA;MAAA;MAAA;IAAA,QAVrC;EAAA,gBADJ;AAeH,CAnBD;;GAAMP,W;UAEoBD,Q;;;KAFpBC,W;AAqBNA,WAAW,CAACS,SAAZ,GAAwB;EACpBH,KAAK,EAAER,SAAS,CAACY,MAAV,CAAiBC,UADJ;EAEpBP,IAAI,EAAEN,SAAS,CAACY,MAFI;EAGpBL,WAAW,EAAEP,SAAS,CAACY;AAHH,CAAxB;AAKAV,WAAW,CAACY,YAAZ,GAA2B;EACvBR,IAAI,EAAE,MADiB;EAEvBC,WAAW,EAAE;AAFU,CAA3B;AAKA,eAAeL,WAAf"},"metadata":{},"sourceType":"module"}