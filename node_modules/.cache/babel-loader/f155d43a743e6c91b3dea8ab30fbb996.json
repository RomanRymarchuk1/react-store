{"ast":null,"code":"var _jsxFileName = \"/Users/romarumarchyk/Desktop/MyGitLabHW/react-redux/src/components/CustomInput/CustomInput.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useField } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CustomInput = props => {\n  _s();\n\n  const {\n    type,\n    placeholder\n  } = props;\n  const [field, meta, helpers] = useField(props);\n\n  const onChange = e => {\n    if (e.target.value === 'aaa') {\n      helpers.setTouched(true);\n      helpers.setError('NEVER INSERT \"aaa\"!!!!!!');\n    }\n\n    field.onChange(e);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: type,\n      placeholder: placeholder // value={field.value}\n      // name={field.name}\n      // onChange={field.onChange}\n      // onBlur={field.onBlur}\n      ,\n      ...field,\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), meta.touched && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"error\",\n      children: meta.error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CustomInput, \"YNHzajAxtEaGbRInbMDYR0mR8tA=\", false, function () {\n  return [useField];\n});\n\n_c = CustomInput;\nCustomInput.propTypes = {\n  type: PropTypes.string,\n  placeholder: PropTypes.string\n};\nCustomInput.defaultProps = {\n  type: 'text',\n  placeholder: ''\n};\nexport default CustomInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomInput\");","map":{"version":3,"names":["React","PropTypes","useField","CustomInput","props","type","placeholder","field","meta","helpers","onChange","e","target","value","setTouched","setError","touched","error","propTypes","string","defaultProps"],"sources":["/Users/romarumarchyk/Desktop/MyGitLabHW/react-redux/src/components/CustomInput/CustomInput.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useField } from 'formik';\n\nconst CustomInput = (props) => {\n    const { type, placeholder, } = props;\n\n    const [field, meta, helpers] = useField(props);\n\n    const onChange = (e) => {\n        if (e.target.value === 'aaa') {\n            helpers.setTouched(true);\n            helpers.setError('NEVER INSERT \"aaa\"!!!!!!');\n        }\n\n        field.onChange(e);\n    }\n\n    return (\n        <>\n            <input\n                type={type}\n                placeholder={placeholder}\n                // value={field.value}\n                // name={field.name}\n                // onChange={field.onChange}\n                // onBlur={field.onBlur}\n                {...field}\n                onChange={onChange}\n            />\n\n            {meta.touched && <span className=\"error\">{meta.error}</span>}\n        </>\n    );\n}\n\nCustomInput.propTypes = {\n    type: PropTypes.string,\n    placeholder: PropTypes.string,\n};\nCustomInput.defaultProps = {\n    type: 'text',\n    placeholder: '',\n};\n\nexport default CustomInput;"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,QAAyB,QAAzB;;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;EAAA;;EAC3B,MAAM;IAAEC,IAAF;IAAQC;EAAR,IAAyBF,KAA/B;EAEA,MAAM,CAACG,KAAD,EAAQC,IAAR,EAAcC,OAAd,IAAyBP,QAAQ,CAACE,KAAD,CAAvC;;EAEA,MAAMM,QAAQ,GAAIC,CAAD,IAAO;IACpB,IAAIA,CAAC,CAACC,MAAF,CAASC,KAAT,KAAmB,KAAvB,EAA8B;MAC1BJ,OAAO,CAACK,UAAR,CAAmB,IAAnB;MACAL,OAAO,CAACM,QAAR,CAAiB,0BAAjB;IACH;;IAEDR,KAAK,CAACG,QAAN,CAAeC,CAAf;EACH,CAPD;;EASA,oBACI;IAAA,wBACI;MACI,IAAI,EAAEN,IADV;MAEI,WAAW,EAAEC,WAFjB,CAGI;MACA;MACA;MACA;MANJ;MAAA,GAOQC,KAPR;MAQI,QAAQ,EAAEG;IARd;MAAA;MAAA;MAAA;IAAA,QADJ,EAYKF,IAAI,CAACQ,OAAL,iBAAgB;MAAM,SAAS,EAAC,OAAhB;MAAA,UAAyBR,IAAI,CAACS;IAA9B;MAAA;MAAA;MAAA;IAAA,QAZrB;EAAA,gBADJ;AAgBH,CA9BD;;GAAMd,W;UAG6BD,Q;;;KAH7BC,W;AAgCNA,WAAW,CAACe,SAAZ,GAAwB;EACpBb,IAAI,EAAEJ,SAAS,CAACkB,MADI;EAEpBb,WAAW,EAAEL,SAAS,CAACkB;AAFH,CAAxB;AAIAhB,WAAW,CAACiB,YAAZ,GAA2B;EACvBf,IAAI,EAAE,MADiB;EAEvBC,WAAW,EAAE;AAFU,CAA3B;AAKA,eAAeH,WAAf"},"metadata":{},"sourceType":"module"}